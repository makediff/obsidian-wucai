import nunjucks from 'nunjucks'
import { WuCaiUtils } from './utils'

export class WuCaiTemplates {
  // 当前用户网页对应的渲染模板
  pageTemplateStr: string
  pageNoteTemplateStr: string
  highlightsTemplateStr: string

  // 从模板里提取的 block
  blocks: WuCaiBlocks

  // 提前编译好的 template
  pagenoteEngine: nunjucks.Template
  highlightsEngine: nunjucks.Template
  pageEngine: nunjucks.Template

  // https://mozilla.github.io/nunjucks/templating.html
  // 默认的页面模板
  static Style001: string = `
---
Title: "{{title}}"
Url: {{url}}
WuCaiUrl: "{{wucaiurl}}"
CreateAt: {{createat}}
---

## {{title}}
{{tags}} [原文]({{url}})

## Page Notes
{% block pagenote %}
{{pagenote}}
{% endblock %}

## Highlights
{% block highlights %}
{% for item in highlights %}
> <font color="{{item.color}}">{{item.note}}</font>
{% endfor %}
{% endblock %}

## Others

> generated by WuCai@0415
`
  constructor(tpl: string) {
    this.pageTemplateStr = tpl || WuCaiTemplates.Style001
  }

  // 预编译
  precompile() {
    // 提取局部模板提前编译
    const blocks = WuCaiUtils.getBlocks(this.pageTemplateStr)
    this.blocks = blocks

    // 对 blocks 添加占位符
    let renderHolders: { [key: string]: string } = {}
    if (blocks.pagenote) {
      renderHolders['pagenote'] = WuCaiUtils.wrapBlock(blocks.pagenote, 'pagenote')
    }
    if (blocks.highlights) {
      renderHolders['highlights'] = WuCaiUtils.wrapBlock(blocks.highlights, 'highlights')
    }

    // 提前将 template 编译好
    const pageStr = WuCaiUtils.replaceBlocks(this.pageTemplateStr, renderHolders)
    this.pageEngine = nunjucks.compile(pageStr)

    // 局部模板
    this.pagenoteEngine = nunjucks.compile(blocks.pagenote)
    this.highlightsEngine = nunjucks.compile(blocks.highlights)
  }
}
